Today
-----------------------------------------
3. Create separate NPM bundles

!! Verify sourcemap transform

4. Add multiple bundle events

-----

5. Integrate babel
   - Determine if the code to bundle is JS; set a configuration flag to kick off babel.

6. Integrate Typescript

7. Respect any local configuration files provided.
   - Have a flag / env override to ignore local config files

8. WATCH WATCH WATCH

9. copy command

---

copy command

Testing phase
---------
// TODO MUST CHECK CWD and directory path ramifications
  - CWD when loading esmodules entry point and local relative paths.
    - esmodules entry point is considered to be in the same directory as module / system.json.

- Consider looking if a verification method needs to be added to plugin-string for bad user data.
  Test w/ underlying Rollup plugin

- In bundle command there are multiple array includes usages, so consider structuring data differently for performance.

Before publishing
---------

- Make and test a separate modules for FlagHandler & RollupRunner

---------

Keep in mind:
- Our CLI error handler is potentially a big fragile (needs better testing for node org / non-org modules).

- It appears that @oclif/plugin-not-found does not appear to play nice w/ dynamic command flags

---------

External projects:
backbone-esnext-events - triggerSync & triggerAsync will insert `null` for callbacks that match, but don't return a value.
typhonjs-package-util - `formatFromError` does not take into account NPM organizations.