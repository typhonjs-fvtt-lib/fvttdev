Today
-----------------------------------------
5. refactor - move all Rollup / oclif plugins to typhonjs-node-rollup org

6. Respect any local configuration files provided.
   - Have a flag / env override to ignore local config files

7. Workout weighting algorithm for Oclif / Rollup plugins.

-----

Investigate:
We may want to hydrate / expand on plugin configuration data after the repo is inspected.
  - plugin-alias is such an example

-----

5. WATCH WATCH WATCH

6. copy command

---

unbundle command

---

RollupRunner / Bundle Events
// Allow plugins a chance to parse any config data when
triggerAsync    'typhonjs:oclif:bundle:data:parse' -> packageData, bundleData

// Triggered during the rollup / bundle process allowing Oclif plugins to return specific Rollup plugins.
triggerAsync    'typhonjs:oclif:bundle:plugins:main:output:get' -> bundleData
triggerAsync    'typhonjs:oclif:bundle:plugins:npm:input:get' -> bundleData

--

?. Add multiple bundle events
   - add more event callbacks for plugins to respond to

------

Testing phase
---------
// TODO MUST CHECK CWD and directory path ramifications
  - CWD when loading esmodules entry point and local relative paths.
    - esmodules entry point is considered to be in the same directory as module / system.json.

- Consider looking if a verification method needs to be added to plugin-string for bad user data.
  Test w/ underlying Rollup plugin

- In bundle command there are multiple array includes usages, so consider structuring data differently for performance.

---------
Known Conflicts (Rollup plugins)
- rollup-plugin-sourcemaps must be after @rollup/plugin-typescript otherwise things will fail for typescript.
  - current solution was to disable rollup-plugin-sourcemaps for the main bundle generation as it's only really
    necessary for including existing source maps of bundled npm modules.

---------

Before publishing
---------
- Info on setting up eslint for @babel/preset-env use:
https://griffa.dev/posts/setting-up-eslint-to-work-with-new-or-proposed-javascript-features-such-as-private-class-fields./

- Make and test a separate modules for FlagHandler & RollupRunner

---------

Keep in mind:
- Our CLI error handler is potentially a big fragile (needs better testing for node org / non-org modules).

- It appears that @oclif/plugin-not-found does not appear to play nice w/ dynamic command flags

---------

External projects:
backbone-esnext-events - triggerSync & triggerAsync will insert `null` for callbacks that match, but don't return a value.
typhonjs-package-util - `formatFromError` does not take into account NPM organizations.